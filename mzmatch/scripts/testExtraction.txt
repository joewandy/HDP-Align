#!/bin/bash

DIR="$( cd "$( dirname "$0" )" && pwd )"
source $DIR/common.sh
MZSTANDARDS="/Users/rdaly/research/data/"
STANDARDS="/Users/rdaly/work/research/data/Standards"
DATA=( std1 std2 std3 )
DATA=( std1 )
for data in ${DATA[@]}; do
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o checkDerivates.csv -adducts M-H
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates-lotsOfAdducts_NEG.csv -adducts M-3H
	$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates_POS.csv -adducts M+Na
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates-lotsOfAdducts_NEG.csv -adducts M-3H,M-2H,M-H2O-H,M-H,M+Na-2H,M+Cl,M+K-2H,M+FA-H,M+Br,2M-H,2M+FA-H,3M-H
	$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates-lotsOfAdducts_POS.csv -adducts M+3H,M+2H+Na,M+H+2Na,M+3Na,M+2H,M+H+NH4,M+H+Na,M+H+K,M+ACN+2H,M+2Na,M+2ACN+2H,M+3ACN+2H,M+H,M+NH4,M+Na,M+CH3OH+H,M+K,M+ACN+H,M+2Na-H,M+ACN+Na,M+2K-H,M+2ACN+H,2M+H,2M+NH4,2M+Na,2M+3H2O+2H,2M+K,2M+ACN+H,2M+ACN+Na
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates_POS.csv -adducts M+H,2M+H
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates_POS.csv -adducts M+H,M+Na,M+K,M+NH4,M+ACN+H,M+2H,2M+H
	#$JAVA org.ronandaly.metasign.ExtractIsotopePatterns -i $STANDARDS/$data.xml -o $data-derivates_NEG.csv -adducts M-H,M-2H,M-H2O-H,2M-H
done
exit 


#DATA=( std1 std2 std3 )
#MODE=( NEG POS )
#MEASURE_TYPES=( cosine pearson )
DATA=( std1 )
MODE=( NEG )
MEASURE_TYPES=( pearson )

ALPHA=( 1 )
LAMBDA=( 8 )
SIGMA_SQUARED=( 0.4 )
#ALPHA=( 0.5 1 2 4 8 )
#LAMBDA=( 4 6 8 10 12 )
#SIGMA_SQUARED=( 0.2 0.3 0.4 0.5 0.6 )
ALPHA0="3.0f"
ALPHA1="10.0f"
NUM_REPS=30

echo "data,method,alpha,lambda,sigmaSquared,numberCovered,numberCoveredAsBP,numberClusters,numberNonSingletonClusters,numberCoveredSingleton,numberCoveredNonSingleton,truePositives,falsePositive,trueNegative,falseNegative,tpr,fpr,f1,mcc,ri,ba"

for data in ${DATA[@]}; do
for mode in ${MODE[@]}; do
for t in ${MEASURE_TYPES[@]}; do
$JAVA  mzmatch.ipeak.sort.RelatedPeaks -i ${DATA_DIR}/${data}_${mode}.identified.peakml -o tmp.peakml -ppm 3 -rtwindow 15 -method sample -measure pearson -alpha 1 -lambda 8 -sigmaSquared 0.4 -numSamples 100
done
done
done
exit

for alpha in ${ALPHA[@]}; do
for lambda in ${LAMBDA[@]}; do
for sigma_squared in ${SIGMA_SQUARED}; do 

for data in ${DATA[@]}; do
for mode in ${MODE[@]}; do
for t in ${MEASURE_TYPES[@]}; do
	#echo ${data}_${mode}_${t}
	#while true; do
	for ((n =0; n < ${NUM_REPS}; n++)); do
	#echo $n
	$JAVA  mzmatch.ipeak.sort.RelatedPeaks -i ${DATA_DIR}/${data}_${mode}.identified.peakml -o $DATA_DIR/${data}_${mode}.mixture.${t}.peakml -ppm 3 -rtwindow 15 -method sample -measure ${t} -alpha ${alpha} -lambda ${lambda} -sigmaSquared ${sigma_squared} -numSamples 50
	
	#$JAVA mzmatch.ipeak.sort.RelatedPeaks -i ${DATA_DIR}/${data}_${mode}.identified.peakml -o $DATA_DIR/${data}_${mode}.mixture.${t}.peakml -ppm 3 -rtwindow 15 -method sample -measure ${t} -distributions BetaBeta -alpha0 $ALPHA0 -alpha1 $ALPHA1
	#RETVAL=$?
	#[ $RETVAL -ne 0 ] && break
	#done
	$JAVA mzmatch.ipeak.util.Identify -i ${DATA_DIR}/${data}_${mode}.mixture.${t}.peakml -o ${DATA_DIR}_identified/${data}_${mode}.mixture.${t}.peakml -ppm 3 -databases $STANDARDS/${data}.xml
	echo -n "${data}_${mode},"
	echo -n "$t,"
	echo -n "$alpha,"
	echo -n "$lambda,"
	echo -n "$sigma_squared,"
	$JAVA org.ronandaly.metasign.CountIds -i ${DATA_DIR}_identified/${data}_${mode}.mixture.${t}.peakml
	done
#$JAVA org.ronandaly.metasign.ExtractClustering out.peakml relation.id false > out.pearson.assignments.csv
done
done
done

done
done
done
